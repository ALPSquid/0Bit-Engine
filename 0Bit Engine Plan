LibGDX based game engine

    Based on LibGDX including its back-end practices
    Should easily manage (using singletons):
        Screens
        Assets
        Rendering
        Debugging overlays and renderers
        World (incorporate deltatime)
        Input (including Controller support)
        GUIs
        Actors (static, dynamic) use Ashley?
        Particles
        Logging(?) (wrapper for the inbuilt LibGDX logging system)
        Physics (Box2D option)
        Collision Detection (simple: custom, advanced: Box2D)


- Support Systems
	- Start-Up/Shut-Down (static Managers, pg 198) 
	- Memory Manager (Allocators, pg 206)
	- Custom Containers & Iterators (possibly, pg 224)
	- UIDs (Hashed, pg 244)
	- Engine Configuration (pg 252)

- Resource System
	- File System (pg 262)
	- Asynchronous I/O (pg 269)
	- Resource Manager (pg 272)

- Game
	- Rendering Loop (pg 303)
	- Game Loop (pg 304, 307)
	- Time Deltas (pg 312)

- HID
	- Input Controller (pg 339)

- Debugging/Development Tools
	- Logging/Tracing (pg 367)
	- Debug Drawing (pg 372)
	- Menus (pg 380)
	- Console (pg 382)
	- Profiling (pg 386)
	- Stats (pg 393)

- Graphics
	- Renderer (pg 400)
	- Animation (pg 491)

- Physics pg 595)
	- Box2D?

- Gameplay (pg 698)
	- Updating Objects (pg 757)
	- Events (pg 773)
	- Scripting (pg 794)
